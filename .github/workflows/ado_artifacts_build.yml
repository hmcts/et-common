name: Publish to Azure Artifacts

on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - master

jobs:
  PublishToAzureArtifacts:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0 # Ensure the full history is available for versioning

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 21
          cache: 'gradle'

      - name: Get version from build.gradle
        id: get_version
        if: github.event_name == 'push' && github.ref == 'refs/heads/master'
        run: |
          LATEST_TAG=$(git describe --tags --abbrev=0 --match '3.0.*')
          NEXT_PATCH=$(echo "$LATEST_TAG" | awk -F. '{ print $3+1 }')
          NEXT_VERSION="3.0.${NEXT_PATCH}"
          echo "next_version=$NEXT_VERSION" >> $GITHUB_OUTPUT
          echo "Next version calculated: $NEXT_VERSION"
        shell: bash

        # Set the version as an output for later steps. If this is a pull request, it will use the branch name and commit SHA.
        # Otherwise, it will use the calculated next version.
      - name: Set Release Version
        id: set_release_version
        run: |
          if [ "${{ github.event_name }}" = "pull_request" ]; then
            RELEASE_VERSION="${{ github.head_ref }}-$((cat $GITHUB_EVENT_PATH | jq -r .pull_request.head.sha) | cut -c1-7)"
            echo "release_version=$RELEASE_VERSION" >> $GITHUB_OUTPUT
          elif [ "${{ github.event_name }}" = "push" ]; then
            RELEASE_VERSION=${{ steps.get_version.outputs.next_version }}
            echo "release_version=$RELEASE_VERSION" >> $GITHUB_OUTPUT
            git tag "$RELEASE_VERSION"
            git push origin "$RELEASE_VERSION"
          fi
        shell: bash

      - name: Publish to Azure DevOps Artifacts
        run: |
          ./gradlew publish
        env:
          AZURE_DEVOPS_ARTIFACT_USERNAME: ${{ secrets.AZURE_DEVOPS_ARTIFACT_USERNAME }}
          AZURE_DEVOPS_ARTIFACT_TOKEN: ${{ secrets.AZURE_DEVOPS_ARTIFACT_TOKEN }}
          RELEASE_VERSION: ${{ steps.set_release_version.outputs.release_version }}
        shell: bash